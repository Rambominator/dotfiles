#!/usr/bin/env ruby
#encoding: utf-8

require 'thor'

HOSTS = '/tmp/hosts'

FUN_DOMAINS = %q{
youtube.com 
twitter.com
reader.google.com
championat.com
market.yandex.ru
ebay.com
habrahabr.ru
dirty.ru
dirtypics.ru
vk.com
reddit.com
lenta.ru
newsru.com
news2.ru
livejournal.com
}

class Mod < Thor

  desc "hard", "enable hard mod"
  def hard
    copy_hosts_to_tmp
    hosts = File.open(HOSTS,'r+')
    if hosts.grep(/Hard Mod/).empty?
      hosts << "#### Hard Mod ####\n"
      FUN_DOMAINS.split.each do |v|
        hosts << "127.0.0.1       #{v}\n"
        hosts << "127.0.0.1       www.#{v}\n"
      end
    else
      puts "Too hard man, you already in hard mod!"
      exit 0
    end
    hosts.close
    copy_tmp_to_hosts
    puts "Good luck with hard mod!"
  end

  desc "fun", "enable fun mod"
  def fun
    copy_hosts_to_tmp
    original_hosts = ""
    hosts = File.open(HOSTS,'r')
    line = hosts.readline
    while line !~ /Hard Mod/ do
      original_hosts << line
      if hosts.eof
        puts "You already in fun mode" 
        hosts.close
        exit 0
      end
      line = hosts.readline
    end
    hosts.close
    File.open(HOSTS,'w') { |hosts| hosts << original_hosts }
    copy_tmp_to_hosts
    puts "You in fun mod!"
  end


  no_tasks do
    def copy_tmp_to_hosts
      system("sudo cp #{HOSTS} /etc/hosts")
      system("sudo /etc/init.d/nscd restart > /dev/null")
    end

    def copy_hosts_to_tmp
      system("cp /etc/hosts #{HOSTS}")
    end
  end

end

class Tpad < Thor
  desc "g3", "poweroff 3g module"
  def g3
    system <<-EOF
    echo -n '0' | \
    sudo tee /sys/bus/usb/devices/2-1.4/power/autosuspend_delay_ms > /dev/null
    echo -n "auto" | \
    sudo tee /sys/bus/usb/devices/2-1.4/power/control > /dev/null
    sudo rmmod qcserial
    sudo rmmod usb_wwan
    sudo rmmod usbserial
    EOF
  end

  desc "nog3", "poweron 3g module"
  def nog3
    system <<-EOF
    echo -n '2000' | \
    sudo tee /sys/bus/usb/devices/2-1.4/power/autosuspend_delay_ms > /dev/null
    echo -n "on" | \
    sudo tee /sys/bus/usb/devices/2-1.4/power/control > /dev/null
    sudo modprobe qcserial
    sudo modprobe usb_wwan
    sudo modprobe usbserial
    EOF
  end

  desc "gps", "enable gps module"
  def gps
    system "echo '\$GPS_START' > /dev/ttyUSB2"
  end

  desc "nogps", "disable gps module"
  def nogps
    systwm "echo '\$GPS_STOP'  > /dev/ttyUSB2"
  end
end
