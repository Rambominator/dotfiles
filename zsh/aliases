#aliases
#
#git
alias g='git '
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff --color'
alias gk='gitk --all&'
alias gx='gitx --all'
alias gl='git pull'
alias gp='git push'
alias gca='git commit -a'

#hg
alias h='hg '
alias hs='hg status'
alias hd='hg diff'
alias hl='hg pull'
alias hp='hg push -r .'
alias hgl='hg hist'
alias hgunshelve='hg unshelve --config hooks.pretxncommit.precommit='
alias hgshelve='hg shelve --config hooks.pretxncommit.precommit='

alias vim='nvim'
alias ac='apt-cache'
alias acs='apt-cache search'
alias ai='sudo apt-get install'
alias au='sudo apt-get update && sudo apt-get dist-upgrade'
alias py='python'
alias da='django-admin'

alias -s pdf=evince
alias ssh='TERM=xterm-256color ssh'
alias djkill='kill -15 $(lsof -ti :8000 -sTCP:LISTEN)'

alias dda='docker-compose exec django pipenv run django-admin'
alias dc='docker-compose'

# https://github.com/mitsuhiko/dotfiles/blob/master/sh/myprofile#L129
export SKIM_DEFAULT_COMMAND="rg --files || find ."
alias skvi='f(){ x="$(sk --bind "ctrl-p:toggle-preview" --ansi --preview="preview.sh {}" --preview-window=up:50%:hidden)"; [[ $? -eq 0 ]] && vim "$x" || true }; f'
alias rgvi='f(){ x="$(sk --bind "ctrl-p:toggle-preview" --ansi -i -c "rg --color=always --line-number \"{}\"" --preview="preview.sh {}" --preview-window=up:50%:hidden)"; [[ $? -eq 0 ]] && vim "$(echo $x|cut -d: -f1)" "+$(echo $x|cut -d: -f2)" || true }; f'

mkcd() {
    mkdir -p "$1" && cd "$1"
}

cdsitepackages() {
    local python=`which python`
    local venv=${python%/bin/python}
    local python_v=$(readlink $python)
    cd "$venv/lib/$python_v/site-packages/"
}

function anybar { echo -n $1 | nc -4u -w0 localhost ${2:-1738}; }

function fix_pipx {
    # https://github.com/pipxproject/pipx/issues/146#issuecomment-487706652
    VENV_DIR="${1:-${HOME}/.local/pipx/venvs}"

    # Delete any symlinks that point nowhere
    find -L "$VENV_DIR" -type l | xargs rm

    # Assume that a directory is a broken virtual environment if
    # after the symlink cleanup:
    #
    # 1. bin/activate exists
    # 2. bin/python does not exist
    #
    # And for those cases, create a fresh virtual environment.
    for dir in $(find "$VENV_DIR" -type d -depth 1); do
    if [[ -f "$dir/bin/activate" && -d "$dir/lib/python3.7" && ! -f "$dir/bin/python" ]]; then
        echo "Refreshing Python virtual environment for $dir..."
        python3 -m venv $dir
    fi
    done
}
